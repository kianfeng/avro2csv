/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.datamelt.avro.discount;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Discount extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3371240696017092839L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Discount\",\"namespace\":\"com.datamelt.avro.discount\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"age\",\"type\":\"int\"},{\"name\":\"destination_region\",\"type\":\"string\"},{\"name\":\"destination_airport\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"float\"},{\"name\":\"frequent_traveller\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Discount> ENCODER =
      new BinaryMessageEncoder<Discount>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Discount> DECODER =
      new BinaryMessageDecoder<Discount>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Discount> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Discount> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Discount> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Discount>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Discount to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Discount from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Discount instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Discount fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long id;
  private int age;
  private java.lang.CharSequence destination_region;
  private java.lang.CharSequence destination_airport;
  private float price;
  private int frequent_traveller;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Discount() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param age The new value for age
   * @param destination_region The new value for destination_region
   * @param destination_airport The new value for destination_airport
   * @param price The new value for price
   * @param frequent_traveller The new value for frequent_traveller
   */
  public Discount(java.lang.Long id, java.lang.Integer age, java.lang.CharSequence destination_region, java.lang.CharSequence destination_airport, java.lang.Float price, java.lang.Integer frequent_traveller) {
    this.id = id;
    this.age = age;
    this.destination_region = destination_region;
    this.destination_airport = destination_airport;
    this.price = price;
    this.frequent_traveller = frequent_traveller;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return age;
    case 2: return destination_region;
    case 3: return destination_airport;
    case 4: return price;
    case 5: return frequent_traveller;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: age = (java.lang.Integer)value$; break;
    case 2: destination_region = (java.lang.CharSequence)value$; break;
    case 3: destination_airport = (java.lang.CharSequence)value$; break;
    case 4: price = (java.lang.Float)value$; break;
    case 5: frequent_traveller = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public int getAge() {
    return age;
  }


  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(int value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'destination_region' field.
   * @return The value of the 'destination_region' field.
   */
  public java.lang.CharSequence getDestinationRegion() {
    return destination_region;
  }


  /**
   * Sets the value of the 'destination_region' field.
   * @param value the value to set.
   */
  public void setDestinationRegion(java.lang.CharSequence value) {
    this.destination_region = value;
  }

  /**
   * Gets the value of the 'destination_airport' field.
   * @return The value of the 'destination_airport' field.
   */
  public java.lang.CharSequence getDestinationAirport() {
    return destination_airport;
  }


  /**
   * Sets the value of the 'destination_airport' field.
   * @param value the value to set.
   */
  public void setDestinationAirport(java.lang.CharSequence value) {
    this.destination_airport = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public float getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(float value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'frequent_traveller' field.
   * @return The value of the 'frequent_traveller' field.
   */
  public int getFrequentTraveller() {
    return frequent_traveller;
  }


  /**
   * Sets the value of the 'frequent_traveller' field.
   * @param value the value to set.
   */
  public void setFrequentTraveller(int value) {
    this.frequent_traveller = value;
  }

  /**
   * Creates a new Discount RecordBuilder.
   * @return A new Discount RecordBuilder
   */
  public static com.datamelt.avro.discount.Discount.Builder newBuilder() {
    return new com.datamelt.avro.discount.Discount.Builder();
  }

  /**
   * Creates a new Discount RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Discount RecordBuilder
   */
  public static com.datamelt.avro.discount.Discount.Builder newBuilder(com.datamelt.avro.discount.Discount.Builder other) {
    if (other == null) {
      return new com.datamelt.avro.discount.Discount.Builder();
    } else {
      return new com.datamelt.avro.discount.Discount.Builder(other);
    }
  }

  /**
   * Creates a new Discount RecordBuilder by copying an existing Discount instance.
   * @param other The existing instance to copy.
   * @return A new Discount RecordBuilder
   */
  public static com.datamelt.avro.discount.Discount.Builder newBuilder(com.datamelt.avro.discount.Discount other) {
    if (other == null) {
      return new com.datamelt.avro.discount.Discount.Builder();
    } else {
      return new com.datamelt.avro.discount.Discount.Builder(other);
    }
  }

  /**
   * RecordBuilder for Discount instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Discount>
    implements org.apache.avro.data.RecordBuilder<Discount> {

    private long id;
    private int age;
    private java.lang.CharSequence destination_region;
    private java.lang.CharSequence destination_airport;
    private float price;
    private int frequent_traveller;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.datamelt.avro.discount.Discount.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.destination_region)) {
        this.destination_region = data().deepCopy(fields()[2].schema(), other.destination_region);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.destination_airport)) {
        this.destination_airport = data().deepCopy(fields()[3].schema(), other.destination_airport);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.price)) {
        this.price = data().deepCopy(fields()[4].schema(), other.price);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.frequent_traveller)) {
        this.frequent_traveller = data().deepCopy(fields()[5].schema(), other.frequent_traveller);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing Discount instance
     * @param other The existing instance to copy.
     */
    private Builder(com.datamelt.avro.discount.Discount other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.destination_region)) {
        this.destination_region = data().deepCopy(fields()[2].schema(), other.destination_region);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.destination_airport)) {
        this.destination_airport = data().deepCopy(fields()[3].schema(), other.destination_airport);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.price)) {
        this.price = data().deepCopy(fields()[4].schema(), other.price);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.frequent_traveller)) {
        this.frequent_traveller = data().deepCopy(fields()[5].schema(), other.frequent_traveller);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public int getAge() {
      return age;
    }


    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder setAge(int value) {
      validate(fields()[1], value);
      this.age = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder clearAge() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'destination_region' field.
      * @return The value.
      */
    public java.lang.CharSequence getDestinationRegion() {
      return destination_region;
    }


    /**
      * Sets the value of the 'destination_region' field.
      * @param value The value of 'destination_region'.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder setDestinationRegion(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.destination_region = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'destination_region' field has been set.
      * @return True if the 'destination_region' field has been set, false otherwise.
      */
    public boolean hasDestinationRegion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'destination_region' field.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder clearDestinationRegion() {
      destination_region = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'destination_airport' field.
      * @return The value.
      */
    public java.lang.CharSequence getDestinationAirport() {
      return destination_airport;
    }


    /**
      * Sets the value of the 'destination_airport' field.
      * @param value The value of 'destination_airport'.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder setDestinationAirport(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.destination_airport = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'destination_airport' field has been set.
      * @return True if the 'destination_airport' field has been set, false otherwise.
      */
    public boolean hasDestinationAirport() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'destination_airport' field.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder clearDestinationAirport() {
      destination_airport = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public float getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder setPrice(float value) {
      validate(fields()[4], value);
      this.price = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder clearPrice() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'frequent_traveller' field.
      * @return The value.
      */
    public int getFrequentTraveller() {
      return frequent_traveller;
    }


    /**
      * Sets the value of the 'frequent_traveller' field.
      * @param value The value of 'frequent_traveller'.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder setFrequentTraveller(int value) {
      validate(fields()[5], value);
      this.frequent_traveller = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'frequent_traveller' field has been set.
      * @return True if the 'frequent_traveller' field has been set, false otherwise.
      */
    public boolean hasFrequentTraveller() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'frequent_traveller' field.
      * @return This builder.
      */
    public com.datamelt.avro.discount.Discount.Builder clearFrequentTraveller() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Discount build() {
      try {
        Discount record = new Discount();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.age = fieldSetFlags()[1] ? this.age : (java.lang.Integer) defaultValue(fields()[1]);
        record.destination_region = fieldSetFlags()[2] ? this.destination_region : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.destination_airport = fieldSetFlags()[3] ? this.destination_airport : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.price = fieldSetFlags()[4] ? this.price : (java.lang.Float) defaultValue(fields()[4]);
        record.frequent_traveller = fieldSetFlags()[5] ? this.frequent_traveller : (java.lang.Integer) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Discount>
    WRITER$ = (org.apache.avro.io.DatumWriter<Discount>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Discount>
    READER$ = (org.apache.avro.io.DatumReader<Discount>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.id);

    out.writeInt(this.age);

    out.writeString(this.destination_region);

    out.writeString(this.destination_airport);

    out.writeFloat(this.price);

    out.writeInt(this.frequent_traveller);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readLong();

      this.age = in.readInt();

      this.destination_region = in.readString(this.destination_region instanceof Utf8 ? (Utf8)this.destination_region : null);

      this.destination_airport = in.readString(this.destination_airport instanceof Utf8 ? (Utf8)this.destination_airport : null);

      this.price = in.readFloat();

      this.frequent_traveller = in.readInt();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readLong();
          break;

        case 1:
          this.age = in.readInt();
          break;

        case 2:
          this.destination_region = in.readString(this.destination_region instanceof Utf8 ? (Utf8)this.destination_region : null);
          break;

        case 3:
          this.destination_airport = in.readString(this.destination_airport instanceof Utf8 ? (Utf8)this.destination_airport : null);
          break;

        case 4:
          this.price = in.readFloat();
          break;

        case 5:
          this.frequent_traveller = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










